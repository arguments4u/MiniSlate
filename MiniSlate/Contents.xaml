<UserControl x:Class="MiniSlate.Contents"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MiniSlate"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded"
             d:DesignHeight="288" d:DesignWidth="512">
    <UserControl.LayoutTransform>
        <TransformGroup>
            <RotateTransform Angle="0"/>
        </TransformGroup>
    </UserControl.LayoutTransform>
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="TransparentButtonStyle">
            <Style.Setters>
                <EventSetter Event="Drop" Handler="Image_Drop"/>
                <EventSetter Event="DragOver" Handler="Image_DragOver"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" >
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" 
															Storyboard.TargetName="FocusVisualElement" 
															Storyboard.TargetProperty="Opacity" To="0.5"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" CornerRadius="3" Background="Transparent" 
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                        <Border Opacity="0" x:Name="BackgroundAnimation" Background="Transparent" />
                                        <Rectangle x:Name="BackgroundGradient" >
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="Transparent" Opacity="0.25" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Border>
                                <ContentPresenter
							        x:Name="contentPresenter"
							        Content="{TemplateBinding Content}"
							        ContentTemplate="{TemplateBinding ContentTemplate}"
							        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							        Margin="{TemplateBinding Padding}"/>
                                <Rectangle x:Name="DisabledVisualElement" RadiusX="3" 
									RadiusY="3" Fill="#FFFFFFFF" 
									Opacity="0" IsHitTestVisible="false" />
                                <Rectangle x:Name="FocusVisualElement" RadiusX="2" 
									RadiusY="2" Margin="1" Stroke="#FF6DBDD1" 
									StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Style.Setters>
                <Setter Property="Background" Value="#80FFFFFF"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Style.Setters>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1">
            <Canvas x:Name="ImageCanvas" Background="Transparent" AllowDrop="True" Drop="Image_Drop" DragOver="Image_DragOver" 
                SizeChanged="ImageCanvas_SizeChanged"
                ManipulationStarting="ImageCanvas_ManipulationStarting"
                ManipulationDelta="ImageCanvas_ManipulationDelta"
                ManipulationCompleted="ImageCanvas_ManipulationCompleted">
                <Rectangle IsManipulationEnabled="True" Fill="Transparent" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}, Path=ActualWidth}" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}, Path=ActualHeight}"/>
                <Image x:Name="ImageBox" IsManipulationEnabled="True" />
                <Ellipse x:Name="ManOriginCircle" Width="16" Height="16" Fill="Blue" Visibility="Hidden" />
            </Canvas>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Name="LeftWord" Grid.Row="0" Focusable="False" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="128" Background="Transparent" Style="{StaticResource TransparentButtonStyle}" Click="LeftSide_Click"/>
                <Button x:Name="RightWord" Grid.Row="0" Focusable="False" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="128" Background="Transparent" Style="{StaticResource TransparentButtonStyle}" Click="RightSide_Click"/>
                <Grid Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Grid.Resources>
                        <BooleanToVisibilityConverter x:Key="BoolToVis" />
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton Style="{StaticResource ToggleButtonStyle}" BorderBrush="{x:Null}" x:Name="ImageListToggle">
                        <Image Width="32" Height="32" Source="./Resources/list.png"/>
                    </ToggleButton>
                    <ListBox Grid.Column="1" x:Name="ImageList" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="Transparent" SelectionChanged="ImageList_SelectionChanged" Visibility="{Binding ElementName=ImageListToggle, Path=IsChecked, Converter={StaticResource BoolToVis}}" ItemsSource="{Binding Thumbnails, RelativeSource={RelativeSource AncestorType=UserControl}}" >
                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                            <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                                <StackPanel Orientation="Horizontal" IsItemsHost="True"></StackPanel>
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Style>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"></StackPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image Source="{Binding Source}" Width="64" Height="64" />
                                    <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" Width="64" FontWeight="Bold" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <StackPanel.Resources>
                    <local:AngleToBooleanConverter x:Key="AngleToBoolean"/>
                    <Style TargetType="Image">
                        <Style.Setters>
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style.Setters>
                    </Style>
                </StackPanel.Resources>
                <RadioButton Focusable="False" GroupName="OpenGroup" Style="{StaticResource ToggleButtonStyle}" Checked="OpenGroup_Checked" Tag="Descending">
                    <Image Source="./Resources/left.png"/>
                </RadioButton>
                <RadioButton Focusable="False" GroupName="OpenGroup" Style="{StaticResource ToggleButtonStyle}" IsChecked="True" Checked="OpenGroup_Checked" Tag="Ascending">
                    <Image Source="./Resources/right.png"/>
                </RadioButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}" >
                    <ToggleButton.IsChecked>
                        <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="LayoutTransform.Children[0].Angle" Mode="TwoWay" Converter="{StaticResource AngleToBoolean}">
                            <Binding.ConverterParameter>
                                <sys:Int32>0</sys:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </ToggleButton.IsChecked>
                    <Image Source="./Resources/rotate000.png"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}">
                    <ToggleButton.IsChecked>
                        <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="LayoutTransform.Children[0].Angle" Mode="TwoWay" Converter="{StaticResource AngleToBoolean}">
                            <Binding.ConverterParameter>
                                <sys:Int32>90</sys:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </ToggleButton.IsChecked>
                    <Image Source="./Resources/rotate090.png"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}">
                    <ToggleButton.IsChecked>
                        <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="LayoutTransform.Children[0].Angle" Mode="TwoWay" Converter="{StaticResource AngleToBoolean}">
                            <Binding.ConverterParameter>
                                <sys:Int32>180</sys:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </ToggleButton.IsChecked>
                    <Image Source="./Resources/rotate180.png"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}">
                    <ToggleButton.IsChecked>
                        <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="LayoutTransform.Children[0].Angle" Mode="TwoWay" Converter="{StaticResource AngleToBoolean}">
                            <Binding.ConverterParameter>
                                <sys:Int32>270</sys:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </ToggleButton.IsChecked>
                    <Image Source="./Resources/rotate270.png"/>
                </ToggleButton>
                <Button x:Name="ResetButton" Focusable="False" Background="#80FFFFFF" BorderBrush="{x:Null}"  Click="ResetButton_Click">
                    <Image Source="./Resources/reset.png"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
